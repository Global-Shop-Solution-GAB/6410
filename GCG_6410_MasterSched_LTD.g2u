Program.Sub.ScreenSU.Start
Gui.FrmMaster..Create
Gui.FrmMaster..Size(15330,8760)
Gui.FrmMaster..MinX(15330)
Gui.FrmMaster..MinY(8760)
Gui.FrmMaster..Position(0,0)
Gui.FrmMaster..BackColor(-2147483633)
Gui.FrmMaster..MousePointer(0)
Gui.FrmMaster..Event(UnLoad,FrmMaster_UnLoad)
Gui.FrmMaster..Caption("Master Schedule - Release/Picklist")
Gui.FrmMaster.picGSSLogo.Create(PictureBox)
Gui.FrmMaster.picGSSLogo.Size(4125,960)
Gui.FrmMaster.picGSSLogo.Position(5520,45)
Gui.FrmMaster.picGSSLogo.Event(DblClick,picGSSLogo_DblClick)
Gui.FrmMaster.picGSSLogo.ToolTip("Double-Click for additional functions")
Gui.FrmMaster.lblStatus.Create(Label,"****Change****",False,3735,255,0,90,135,True,0,"Arial",8,-986896,0)
Gui.FrmMaster.pbStatus.Create(ProgressBar)
Gui.FrmMaster.pbStatus.Size(3735,255)
Gui.FrmMaster.pbStatus.Position(90,375)
Gui.FrmMaster.framePermissions.Create(Frame)
Gui.FrmMaster.framePermissions.Size(4875,450)
Gui.FrmMaster.framePermissions.Position(10170,615)
Gui.FrmMaster.optEdit.Create(Option)
Gui.FrmMaster.optEdit.Enabled(False)
Gui.FrmMaster.optEdit.Size(645,255)
Gui.FrmMaster.optEdit.Position(810,120)
Gui.FrmMaster.optEdit.Caption("Edit")
Gui.FrmMaster.optEdit.Parent("framePermissions")
Gui.FrmMaster.optIssue.Create(Option)
Gui.FrmMaster.optIssue.Size(795,255)
Gui.FrmMaster.optIssue.Position(1470,120)
Gui.FrmMaster.optIssue.Caption("Issue")
Gui.FrmMaster.optIssue.Enabled(False)
Gui.FrmMaster.optIssue.Parent("framePermissions")
Gui.FrmMaster.optWiptoFG.Create(Option)
Gui.FrmMaster.optWiptoFG.Size(1110,255)
Gui.FrmMaster.optWiptoFG.Position(2265,120)
Gui.FrmMaster.optWiptoFG.Caption("Wip to FG")
Gui.FrmMaster.optWiptoFG.Enabled(False)
Gui.FrmMaster.optWiptoFG.Parent("framePermissions")
Gui.FrmMaster.optView.Create(Option)
Gui.FrmMaster.optView.Size(690,255)
Gui.FrmMaster.optView.Position(75,120)
Gui.FrmMaster.optView.Caption("View")
Gui.FrmMaster.optView.Parent("framePermissions")
Gui.FrmMaster.optAlloc.Create(Option)
Gui.FrmMaster.optAlloc.Size(1020,255)
Gui.FrmMaster.optAlloc.Position(3435,120)
Gui.FrmMaster.optAlloc.Parent("framePermissions")
Gui.FrmMaster.optAlloc.Caption("Allocate")
Gui.FrmMaster.frameButtons.Create(Frame)
Gui.FrmMaster.frameButtons.Size(2760,600)
Gui.FrmMaster.frameButtons.Position(12285,75)
Gui.FrmMaster.cmdNew.Create(Button)
Gui.FrmMaster.cmdNew.Size(840,375)
Gui.FrmMaster.cmdNew.Position(1860,165)
Gui.FrmMaster.cmdNew.Caption("New WO")
Gui.FrmMaster.cmdNew.Event(Click,cmdNew_Click)
Gui.FrmMaster.cmdNew.Enabled(False)
Gui.FrmMaster.cmdNew.Parent("frameButtons")
Gui.FrmMaster.cmdRefresh.Create(Button)
Gui.FrmMaster.cmdRefresh.Size(840,375)
Gui.FrmMaster.cmdRefresh.Position(60,165)
Gui.FrmMaster.cmdRefresh.Caption("REFRESH")
Gui.FrmMaster.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.FrmMaster.cmdRefresh.Parent("frameButtons")
Gui.FrmMaster.cmdExport.Create(Button)
Gui.FrmMaster.cmdExport.Size(840,375)
Gui.FrmMaster.cmdExport.Position(960,165)
Gui.FrmMaster.cmdExport.Caption("Export")
Gui.FrmMaster.cmdExport.Event(Click,cmdExport_Click)
Gui.FrmMaster.cmdExport.Parent("frameButtons")
Gui.FrmMaster.tabMaster.Create(Tab)
Gui.FrmMaster.tabMaster.Size(15195,7365)
Gui.FrmMaster.tabMaster.Position(15,1065)
Gui.FrmMaster.tabMaster.Tabs(4)
Gui.FrmMaster.tabMaster.SetTab(0)
Gui.FrmMaster.tabMaster.Caption("All Jobs")
Gui.FrmMaster.tabMaster.SetTab(1)
Gui.FrmMaster.tabMaster.Caption("Mfg to Job")
Gui.FrmMaster.tabMaster.SetTab(2)
Gui.FrmMaster.tabMaster.Caption("Mfg to Stock")
Gui.FrmMaster.tabMaster.SetTab(3)
Gui.FrmMaster.tabMaster.Caption("Indirect Jobs")
Gui.FrmMaster.GsGCAll.Create(GsGridControl)
Gui.FrmMaster.GsGCAll.Size(15045,6975)
Gui.FrmMaster.GsGCAll.Position(0,0)
Gui.FrmMaster.GsGCAll.Event(RowCellClick,GsGCAll_RowCellClick)
Gui.FrmMaster.GsGCAll.Event(CellValueChanged,GsGCAll_CellValueChanged)
Gui.FrmMaster.GsGCAll.Parent("tabMaster",0)
Gui.FrmMaster.GsGCMJ.Create(GsGridControl)
Gui.FrmMaster.GsGCMJ.Size(15045,6975)
Gui.FrmMaster.GsGCMJ.Position(0,0)
Gui.FrmMaster.GsGCMJ.Event(RowCellClick,GsGCMJ_RowCellClick)
Gui.FrmMaster.GsGCMJ.Event(CellValueChanged,GsGCMJ_CellValueChanged)
Gui.FrmMaster.GsGCMJ.Parent("tabMaster",1)
Gui.FrmMaster.GsGCMS.Create(GsGridControl)
Gui.FrmMaster.GsGCMS.Size(15045,6975)
Gui.FrmMaster.GsGCMS.Position(0,0)
Gui.FrmMaster.GsGCMS.Parent("tabMaster",2)
Gui.FrmMaster.GsGCMS.Event(RowCellClick,GsGCMS_RowCellClick)
Gui.FrmMaster.GsGCMS.Event(CellValueChanged,GsGCMS_CellValueChanged)
Gui.FrmMaster.GsGCIndWOs.Create(GsGridControl)
Gui.FrmMaster.GsGCIndWOs.Size(15045,6975)
Gui.FrmMaster.GsGCIndWOs.Position(0,0)
Gui.FrmMaster.GsGCIndWOs.Parent("tabMaster",3)
Gui.FrmMaster.GsGCIndWOs.Event(RowCellClick,GsGCIndWOs_RowCellClick)
Gui.FrmMaster.GsGCIndWOs.Event(CellValueChanged,GsGCIndWOs_CellValueChanged)
Gui.FrmMaster.dtpCutDt.Create(DatePicker)
Gui.FrmMaster.dtpCutDt.Size(1425,285)
Gui.FrmMaster.dtpCutDt.Position(10185,315)
Gui.FrmMaster.dtpCutDt.Event(Change,dtpCutDt_Change)
Gui.FrmMaster.lblCutDt.Create(Label,"Cutoff Date:",True,1080,240,0,10185,120,True,0,"Arial",8,-2147483633,0)
Gui.FrmMaster.chkBarcode.Create(CheckBox)
Gui.FrmMaster.chkBarcode.Size(1695,225)
Gui.FrmMaster.chkBarcode.Position(11385,1110)
Gui.FrmMaster.chkBarcode.Caption("Print Barcode WO")
Gui.FrmMaster.chkBarcode.Event(Click,SavePrint)
Gui.FrmMaster.chkPicklist.Create(CheckBox)
Gui.FrmMaster.chkPicklist.Size(1905,225)
Gui.FrmMaster.chkPicklist.Position(13140,1110)
Gui.FrmMaster.chkPicklist.Caption("Print Material Picklist")
Gui.FrmMaster.chkPicklist.Event(Click,SavePrint)
Gui.FrmMaster.lblMatAvail.Create(Label,"**Hit Refresh to check for Material Availability**",False,3480,255,0,90,825,True,0,"Arial",8,9498256,0)
Gui.FrmMaster.txtCutDays.Create(TextBox,"",True,510,300,0,11700,315,True,0,"Arial",8,-2147483643,1)
Gui.FrmMaster.txtCutDays.MaxLength(2)
Gui.FrmMaster.txtCutDays.NumericOnly(True)
Gui.FrmMaster.txtCutDays.Event(Change,txtCutDays_Change)
Gui.FrmMaster.lblCutDay.Create(Label,"Days:",True,540,240,0,11700,120,True,0,"Arial",8,-2147483633,0)
Gui.frmWeb..Create
Gui.frmWeb..Caption("Global Shop Solutions - Web Sites")
Gui.frmWeb..Size(3990,2025)
Gui.frmWeb..MinX(0)
Gui.frmWeb..MinY(0)
Gui.frmWeb..Position(0,0)
Gui.frmWeb..BackColor(-2147483633)
Gui.frmWeb..MousePointer(0)
Gui.frmWeb..MaxButton(False)
Gui.frmWeb..Sizeable(False)
Gui.frmWeb..Event(UnLoad,frmWeb_UnLoad)
Gui.frmWeb..MinButton(False)
Gui.frmWeb.cmdGSS.Create(Button)
Gui.frmWeb.cmdGSS.Size(3615,375)
Gui.frmWeb.cmdGSS.Position(120,45)
Gui.frmWeb.cmdGSS.Caption("Global Shop Solutions")
Gui.frmWeb.cmdGSS.Event(Click,cmdGSS_Click)
Gui.frmWeb.cmdServ.Create(Button)
Gui.frmWeb.cmdServ.Size(3615,375)
Gui.frmWeb.cmdServ.Position(120,450)
Gui.frmWeb.cmdServ.Caption("ServiceWeb")
Gui.frmWeb.cmdServ.Event(Click,cmdServ_Click)
Gui.frmWeb.cmdUpd.Create(Button)
Gui.frmWeb.cmdUpd.Size(3615,375)
Gui.frmWeb.cmdUpd.Position(120,855)
Gui.frmWeb.cmdUpd.Caption("GSS Updates")
Gui.frmWeb.cmdUpd.Event(Click,cmdUpd_Click)
Gui.frmWeb.cmdResetGsGC.Create(Button)
Gui.frmWeb.cmdResetGsGC.Size(3615,375)
Gui.frmWeb.cmdResetGsGC.Position(120,1260)
Gui.frmWeb.cmdResetGsGC.Caption("Reset All Columns")
Gui.frmWeb.cmdResetGsGC.Event(Click,cmdResetGsGC_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.bExists.Declare
	V.Global.bEdit.Declare
	V.Global.bLongPart.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, Sept 4, 2019
'This project is a modification of project 4291 Master Schedule
'loaddtdvAll and checkreqs are modified to load faster so we don't need to use cache

F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bEditGrp.Declare
	V.Local.bIssueGrp.Declare
	V.Local.bWiptoFG.Declare
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	V.Local.dCutDt.Declare
	V.Local.sRet.Declare
	V.Local.iDays.Declare
	
'	F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
'	F.Intrinsic.String.Build("{0}\GAB\GAS\GAB_GSS_Logo_Green_Dash.png",V.Caller.PluginsDir,V.Local.sGssLogo)
'	Gui.frmWeb..Icon(V.Local.sIcon)
'	Gui.FrmMaster..Icon(V.Local.sIcon)
'	Gui.FrmMaster.picGSSLogo.Picture(V.Local.sGssLogo)

	Gui.FrmMaster.tabMaster.SetTab(0)
	Gui.FrmMaster.optEdit.Value(False)
	Gui.FrmMaster.optView.Value(True)

	'Pull Cutoff Days from GS_Registry
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,3000,5,"",V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,"Cutoff Days")
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,3000,1,"",V.Local.iDays)
		F.Intrinsic.Date.DateAdd("D",V.Local.iDays,V.Ambient.Date,V.Local.dCutDt)
		Gui.FrmMaster.txtCutDays.Text(V.Local.iDays)
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.DateAdd("D",7,V.Ambient.Date,V.Local.dCutDt)
		Gui.FrmMaster.txtCutDays.Text("7")
	F.Intrinsic.Control.EndIf
	Gui.FrmMaster.dtpCutDt.Value(V.Local.dCutDt)
	F.Intrinsic.Control.UnBlockEvents
	
	Gui.FrmMaster.optEdit.Enabled(True)

	'Check User Permissions
	F.Global.Security.IsInGroup(v.Caller.User,"EditWO",V.Local.bEditGrp)
	F.Intrinsic.Control.If(v.Local.bEditGrp,=,True)
		Gui.FrmMaster.optEdit.Enabled(True)
		Gui.FrmMaster.cmdNew.Enabled(True)
		Gui.FrmMaster.chkBarcode.Enabled(True)
		Gui.FrmMaster.chkPicklist.Enabled(True)
		V.Global.bEdit.Set(True)
	F.Intrinsic.Control.EndIf

	F.Global.Security.IsInGroup(v.Caller.User,"ISSUE",v.Local.bIssueGrp)
	F.Intrinsic.Control.If(v.Local.bIssueGrp,=,True)
		Gui.FrmMaster.optIssue.Enabled(True)
	F.Intrinsic.Control.EndIf

	F.Global.Security.IsInGroup(v.Caller.User,"WIPFG",v.Local.bWiptoFG)
	F.Intrinsic.Control.If(v.Local.bWiptoFG,=,True)
		Gui.FrmMaster.optWiptoFG.Enabled(True)
	F.Intrinsic.Control.EndIf

	F.ODBC.Connection!con.OpenCompanyConnection(600)
	F.Intrinsic.Control.CallSub(checktable)	
	F.Intrinsic.Control.CallSub(CheckLongPart)
	F.Intrinsic.Control.CallSub(checkprint)	
		
	Gui.FrmMaster..Show	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.CallSub(lockscreen)	
	F.Intrinsic.Control.CallSub(SetAnchors)
	
	'Load data
	F.Intrinsic.Control.CallSub("loaddtdvall")
	F.Intrinsic.Control.CallSub("loaddtmj")
	F.Intrinsic.Control.CallSub("loaddtms")
	F.Intrinsic.Control.CallSub("loaddtindwos")
	f.Intrinsic.Control.CallSub("Color_Ready_And_FullAllocated")
	F.Intrinsic.Control.CallSub("Deserialize")		
	F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.UnBlockEvents
		

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.UnLoad.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	F.Intrinsic.Control.If(V.ODBC.con.State,=,1)
		F.ODBC.Connection!con.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.UnLoad.End

Program.Sub.LockScreen.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.FrmMaster.frameButtons.Enabled(False)
	Gui.FrmMaster.framePermissions.Enabled(False)
	Gui.FrmMaster.dtpCutDt.Enabled(False)
	Gui.FrmMaster.txtCutDays.Enabled(False)
	Gui.FrmMaster.chkBarcode.Enabled(False)
	Gui.FrmMaster.chkPicklist.Enabled(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LockScreen.End

Program.Sub.EnableScreen.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.FrmMaster.frameButtons.Enabled(True)
	Gui.FrmMaster.framePermissions.Enabled(True)	
	Gui.FrmMaster.dtpCutDt.Enabled(True)
	Gui.FrmMaster.txtCutDays.Enabled(True)
	Gui.FrmMaster.chkBarcode.Enabled(True)
	Gui.FrmMaster.chkPicklist.Enabled(True)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.EnableScreen.End

Program.Sub.SetAnchors.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'0 - None 	'1 - Top 	'2 - Bottom 	'4 - Left 	'8 - Right
	Gui.FrmMaster.tabMaster.Anchor(15)
	Gui.FrmMaster.picGSSLogo.Anchor(1)
	Gui.FrmMaster.frameButtons.Anchor(9)
	Gui.FrmMaster.framePermissions.Anchor(9)
	'Modified by Deni Y 11/25/20, turned off commands below since these are flagged as error by GABErrorScanner
	'Gui.FrmMaster.frameTotals.Anchor(10)
	'Gui.FrmMaster.lblBegDt.Anchor(9)
	'Gui.FrmMaster.dtpBegDt.Anchor(9)
	
	gui.FrmMaster.lblCutDt.Anchor(9)
	gui.FrmMaster.dtpCutDt.Anchor(9)
	Gui.FrmMaster.chkBarcode.Anchor(9)
	Gui.FrmMaster.chkPicklist.Anchor(9)
	Gui.FrmMaster.lblCutDay.Anchor(9)
	Gui.FrmMaster.txtCutDays.Anchor(9)
	
	Gui.FrmMaster.GsGCAll.Anchor(15)
	Gui.FrmMaster.GsGCMJ.Anchor(15)
	Gui.FrmMaster.GsGCMS.Anchor(15)
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'	Gui.FrmMaster.GsGCMJMS.Anchor(15)

	Gui.FrmMaster.GsGCIndWOs.Anchor(15)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SetAnchors.End

Program.Sub.FrmMaster_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	

	F.Intrinsic.Control.CallSub(Serialize)
	f.Intrinsic.Control.CallSub("Unload")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_UnLoad.End

Program.Sub.CheckTable.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bTable.Declare(Boolean)

	F.ODBC.Connection!con.TableExists("GAB_4169_WO_NOTES",V.Local.bTable)
	F.Intrinsic.Control.If(V.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GAB_4169_WO_NOTES(JOB CHAR(6),SUFFIX CHAR(3),NOTES LONGVARCHAR);")
		F.ODBC.Connection!Con.Execute("CREATE INDEX GAB_4169_WO_NOTES01 USING 1 ON GAB_4169_WO_NOTES(JOB);")
		F.ODBC.Connection!Con.Execute("CREATE INDEX GAB_4169_WO_NOTES02 USING 2 ON GAB_4169_WO_NOTES(SUFFIX);")
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.CheckPrint.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sRet.Declare
	V.Local.bRet.Declare
	V.Local.sSQL.Declare

	F.ODBC.Connection!conC.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)

	F.Intrinsic.String.Build("SELECT REG_ID FROM GS_REGISTRY WHERE REG_ID = 5669 AND COMPANY = '{0}';",V.Caller.CompanyCode,V.Local.sSQL)
	F.ODBC.Connection!conC.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.IsNullOrWhitespace)
		Gui.FrmMaster.chkBarcode.Value(1)
		Gui.FrmMaster.chkPicklist.Value(1)
	F.Intrinsic.Control.Else
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,1000,0,"",V.Local.bRet)
		Gui.FrmMaster.chkBarcode.Value(V.Local.bRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,2000,0,"",V.Local.bRet)
		Gui.FrmMaster.chkPicklist.Value(V.Local.bRet)
	F.Intrinsic.Control.EndIf

	F.ODBC.Connection!conC.Close
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckPrint.End

Program.Sub.CheckLongPart.Start
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
Program.Sub.CheckLongPart.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare			
	
	F.Intrinsic.Control.CallSub(Serialize)
	f.Intrinsic.Control.CallSub("Load")	
	F.Intrinsic.Control.CallSub(Deserialize)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.Load.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	V.Local.bCutoff.Declare	
		
	Gui.FrmMaster..Caption("Master Schedule - Release/Picklist")
	V.Local.bCutoff.Set(True)
	Gui.FrmMaster.GsGCAll.ClearRows("gvAll")
	Gui.FrmMaster.cmdRefresh.BackColor(14474460)
	Gui.FrmMaster.GsGCAll.Visible(False)
	Gui.FrmMaster.GsGCMJ.Visible(False)
	Gui.FrmMaster.GsGCMS.Visible(False)
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'	Gui.FrmMaster.GsGCMJMS.Visible(False)

	Gui.FrmMaster.GsGCIndWOs.Visible(False)
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.CallSub(lockscreen)
	
	'Load Data
	F.Intrinsic.Control.CallSub("loaddtdvall")
	F.Intrinsic.Control.CallSub("loaddtmj")
	F.Intrinsic.Control.CallSub("loaddtms")
	F.Intrinsic.Control.CallSub("loaddtindwos")
	f.Intrinsic.Control.CallSub("Color_Ready_And_FullAllocated")
	F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.UnBlockEvents
	
	Gui.FrmMaster.GsGCAll.Visible(True)
	Gui.FrmMaster.GsGCMJ.Visible(True)
	Gui.FrmMaster.GsGCMS.Visible(True)
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'	Gui.FrmMaster.GsGCMJMS.Visible(True)

	Gui.FrmMaster.GsGCIndWOs.Visible(True)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Load.End

Program.Sub.loadDTDVAll.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iProgress.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.fEstHrs.Declare
	V.Local.fRemHrs.Declare
	V.Local.fPcsRem.Declare
	V.Local.sCurOper.Declare
	V.Local.dCurOperDate.Declare
	V.Local.sNextOper.Declare
	V.Local.sOutside.Declare
	V.Local.dShipDate.Declare
	V.Local.dDateCheck.Declare(Date,01/01/1900)
	V.Local.bDictExists.Declare
	V.Local.sDept.Declare
	V.Local.bIssued.Declare
					 
	V.Local.dDateTime.Declare
	V.Local.sCaption.Declare
	v.Local.dDate1.Declare
	v.Local.dDate2.Declare
	v.Local.iDiff1.Declare
	v.Local.iDiff2.Declare
	v.Local.dCutOff.Declare
	v.Local.sFilter.Declare	
	v.Local.sHold.Declare
	
	v.Local.dCutOff.Set(v.Screen.FrmMaster!dtpCutDt.Value)

	Gui.FrmMaster.lblStatus.Visible(True)
	Gui.FrmMaster.pbStatus.Visible(True)
	Gui.FrmMaster.lblStatus.ForeColor(V.Color.Black)
	Gui.FrmMaster.lblStatus.FontSize(8)
	Gui.FrmMaster.lblStatus.Caption("Loading Work Orders....")

	F.Intrinsic.Control.If(V.DataTable.dtAll.Exists)
		F.Data.DataTable.Close("dtAll")
	F.Intrinsic.Control.EndIf

	F.Data.Dictionary.Exists("dIndirect",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists)
		F.Data.Dictionary.Close("dIndirect")
	F.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.CreateFromSQL("dIndirect","con","SELECT DISTINCT CONCAT(JOB,SUFFIX) AS JS,CONVERT(IF('' = '',1,0),SQL_BIT) FROM IND_LBR_ACCTS;")
	F.Data.Dictionary.SetDefaultReturn("dIndirect",False)

	f.Intrinsic.String.Build("SELECT CONVERT(0,SQL_BIT)  as 'PickList Printed',CASE When FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED,CASE WHEN VJH.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,Convert(0,SQL_Bit) as FullAllocated,PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,PRODUCT_LINE,DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,DATE_DUE,SCHEDULED_DUE_DATE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2',CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,'' AS READY,VJH.CUSTOMER_PO FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION WHERE DATE_CLOSED = '1900-1-1' and Date_Start <= '{0}' ORDER BY DATE_START,PRIORITY,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtAll","con",v.Local.sSQL,True)
	F.Data.DataTable.AddDisplayPartColumn("dtAll",0,"PART","DISPLAY_PART")


	F.Data.Dictionary.CreateFromSql("dtXdic","con","select WO.job+WO.suffix,CASE When Pick_List_Printed = 'Y' THEN CONVERT(1,SQL_BIT) else 0 END from v_order_lines as ORD  join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ")
	f.Data.Dictionary.SetDefaultReturn("dtXdic",0)
	f.Data.DataTable.FillFromDictionary("dtAll","dtXdic","JOBSUFFIX","PickList Printed")
	f.Data.Dictionary.Close("dtXdic")


	Gui.FrmMaster.pbStatus.Min(0)
	f.Intrinsic.Control.if(v.DataTable.dtAll.RowCount,>,0)
		Gui.FrmMaster.pbStatus.Max(V.DataTable.dtAll.RowCount)		
	f.Intrinsic.Control.EndIf

	'Operations
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
	'gui.Form.lblProgress.Caption("Getting data for Operations...")
	
	f.Intrinsic.Control.If(v.DataTable.Ops.Exists)
		f.Data.DataTable.Close("Ops")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("Ops","con","SELECT A.JOB,A.SFX,A.SEQ,A.SEQTYPE,A.SEQRES,A.PCSREMAIN,CONVERT(CASE WHEN A.STARTDATE IS NULL THEN '1900-01-01' ELSE A.STARTDATE END,SQL_DATE) AS STARTDATE,IF(WORK_GROUP <> '',D.WC_DEPT,B.WC_DEPT) AS DEPT FROM APSV3_JBLINES A LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'",True)
	f.Data.DataView.Create("Ops","dvOps")	

	'SeqType3 for all
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'	gui.Form.lblProgress.Caption("Getting data for SeqType3...")

	f.Intrinsic.Control.If(v.DataTable.SeqType3.Exists)
		f.Data.DataTable.Close("SeqType3")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SeqType3","con","SELECT JOB,SFX,SEQ,SEQRES,CONVERT(CASE WHEN STARTDATE IS NULL THEN '1900-01-01' ELSE STARTDATE END,SQL_DATE) AS STARTDATE FROM APSV3_JBLINES WHERE SEQTYPE = '3' AND COMPLDATE IS NULL",True)
	f.Data.DataView.Create("SeqType3","dvSeqType3")
	
	'SeqType2 for all
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner	
'	gui.Form.lblProgress.Caption("Getting data for SeqType2...")
	f.Intrinsic.Control.If(v.DataTable.SeqType2.Exists)
		f.Data.DataTable.Close("SeqType2")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SeqType2","con","Select JOB,SFX,SEQTYPE from APSV3_JBLINES where SEQTYPE ='2' and ComplDate is Null;",True)
	f.Data.DataView.Create("SeqType2","dvSeqType2")	
	
	'Sum HoursOrig + InitSU for all
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner	
'	gui.Form.lblProgress.Caption("Getting data for HoursOrig + InitSU...")
	f.Intrinsic.Control.If(v.DataTable.SumHnI.Exists)
		f.Data.DataTable.Close("SumHnI")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SumHnI","con","SELECT JOB,SFX,CONVERT(SUM(HOURSORIG+INITSU),SQL_NUMERIC) AS EST_HRS FROM APSV3_JBLINES WHERE SEQTYPE = '1' GROUP BY JOB,SFX;",True)
	f.Data.DataView.Create("SumHnI","dvSumHnI")
	
	'Set Indicator
	'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'	gui.Form.pbStatus.Min(0)
	f.Intrinsic.Control.If(v.DataTable.dtAll.RowCount,>,0)
'		gui.Form.pbStatus.Max(v.DataTable.dtAll.RowCount)
	f.Intrinsic.Control.EndIf
'	gui.Form.lblProgress.Caption("Looping to set Indirect and WIP FG...")

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAll.RowCount--,1)
		F.Intrinsic.Math.Add(V.Local.iProgress,1,V.Local.iProgress)
		Gui.FrmMaster.pbStatus.Value(V.Local.iProgress)
		
		V.Local.sJob.Set(V.DataTable.dtAll(V.Local.iCnt).JOB!FieldValTrim)
		V.Local.sSuffix.Set(V.DataTable.dtAll(V.Local.iCnt).SUFFIX!FieldValTrim)
		
		'Build Filter by Job,Suffix
		f.Intrinsic.String.Build("JOB = '{0}' AND SFX = '{1}'",V.Local.sJob,V.Local.sSuffix,v.Local.sFilter)
		f.Data.DataView.SetFilter("Ops","dvOps",v.Local.sFilter)
		f.Data.DataView.SetSort("Ops","dvOps","Job,Sfx,Seq")
		
		'Initialize variables
		V.Local.sDept.Set("")
		V.Local.sCurOper.Set("")
		V.Local.dCurOperDate.Set(01/01/1900)
		V.Local.sNextOper.Set("")
		V.Local.sOutside.Set("")
		V.Local.dShipDate.Set(01/01/1900)
		V.Local.bIssued.Set(True)
		V.Local.fPcsRem.Set(0)		
		
		f.Intrinsic.Control.If(v.DataView.Ops!dvOps.RowCount,=,0)
			V.Local.sCurOper.Set("WIPTOFG")
			V.Local.fPcsRem.Set(0)
			V.Local.sNextOper.Set("")	
		f.Intrinsic.Control.ElseIf(v.DataView.Ops!dvOps.RowCount,=,1)

			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)			
					V.Local.sDept.Set(v.DataView.Ops!dvOps(0).DEPT!FieldValTrim)
					V.Local.sCurOper.Set(v.DataView.Ops!dvOps(0).SEQRES!FieldValTrim)
					F.Intrinsic.Control.If(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal,=,"")
						V.Local.dCurOperDate.Set(01/01/1900)
					F.Intrinsic.Control.Else
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					V.Local.sCurOper.Set("OUTSIDE")
					V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal)
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
			F.Intrinsic.Control.EndSelect
			
		f.Intrinsic.Control.ElseIf(v.DataView.Ops!dvOps.RowCount,>=,2)
			'First record
			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)			
					V.Local.sDept.Set(v.DataView.Ops!dvOps(0).DEPT!FieldValTrim)
					V.Local.sCurOper.Set(v.DataView.Ops!dvOps(0).SEQRES!FieldValTrim)
					F.Intrinsic.Control.If(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal,=,"")
						V.Local.dCurOperDate.Set(01/01/1900)
					F.Intrinsic.Control.Else
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					V.Local.sCurOper.Set("OUTSIDE")
					V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).STARTDATE!FieldVal)
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
			F.Intrinsic.Control.EndSelect		
			
			'Second Record
			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)
					F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
						V.Local.sDept.Set(v.DataView.Ops!dvOps(1).DEPT!FieldValTrim)
						V.Local.sCurOper.Set(v.DataView.Ops!dvOps(1).SEQRES!FieldValTrim)
						F.Intrinsic.Control.If(v.DataView.Ops!dvOps(1).STARTDATE!FieldVal,=,"")
							V.Local.dCurOperDate.Set(01/01/1900)
						F.Intrinsic.Control.Else
							V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(1).STARTDATE!FieldVal)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Else
						V.Local.sNextOper.Set(v.DataView.Ops!dvOps(1).SEQRES!FieldValTrim)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(1).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
						V.Local.sCurOper.Set("OUTSIDE")
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(1).STARTDATE!FieldVal)
						V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(1).PCSREMAIN!FieldValString)
					F.Intrinsic.Control.Else
						F.Intrinsic.Control.If(V.Local.sOutside,=,"")
							V.Local.sNextOper.Set("OUTSIDE")
						F.Intrinsic.Control.Else
							V.Local.sNextOper.Set("OUTSIDE")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndSelect	
		
		f.Intrinsic.Control.EndIf
		
		'SeqType3
		f.Data.DataView.SetFilter("SeqType3","dvSeqType3",v.Local.sFilter)
		f.Data.DataView.SetSort("SeqType3","dvSeqType3","SEQ")		
		f.Intrinsic.Control.If(v.DataView.SeqType3!dvSeqType3.RowCount,>,0)
			V.Local.dShipDate.Set(v.DataView.SeqType3!dvSeqType3(0).STARTDATE!FieldValString)
			v.Local.sOutside.Set(v.DataView.SeqType3!dvSeqType3(0).SEQRES!FieldValString)
		f.Intrinsic.Control.Else
			V.Local.dShipDate.Set()
			v.Local.sOutside.Set("")
		f.Intrinsic.Control.EndIf	

		'Sum HoursOrig + InitSU		
		f.Data.DataView.SetFilter("SumHnI","dvSumHnI",V.Local.sFilter)
		F.Intrinsic.Control.If(V.DataView.SumHnI!dvSumHnI.RowCount,>,0)
			V.Local.fEstHrs.Set(v.DataView.SumHnI!dvSumHnI(0).Est_Hrs!FieldValString)
			f.Intrinsic.Control.If(v.Local.fEstHrs,=,0)
				V.Local.fEstHrs.Set(0.00)
				V.Local.fRemHrs.Set(0.00)			
			f.Intrinsic.Control.Else
				F.Intrinsic.Math.Sub(V.Local.fEstHrs,V.DataTable.dtAll(V.Local.iCnt).ACT_HRS!FieldValFloat,V.Local.fRemHrs)
			f.Intrinsic.Control.EndIf			
		f.Intrinsic.Control.Else
			V.Local.fEstHrs.Set(0.00)
			V.Local.fRemHrs.Set(0.00)	
		F.Intrinsic.Control.EndIf	
	
		'SeqType2 for bIssue
		f.Intrinsic.String.Build("JOB = '{0}' AND SFX = '{1}'",V.Local.sJob,V.Local.sSuffix,v.Local.sFilter)
		f.Data.DataView.SetFilter("SeqType2","dvSeqType2",v.Local.sFilter)
		f.Intrinsic.Control.If(v.DataView.SeqType2!dvSeqType2.RowCount,>,0)
			v.Local.bIssued.Set(False)
		f.Intrinsic.Control.EndIf

		'If dCurOperDate = 01/01/1900 and dShipDate = 01/01/1900
		F.Intrinsic.Control.If(V.Local.dCurOperDate,=,V.Local.dDateCheck)
		F.Intrinsic.Control.AndIf(V.Local.dShipDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued)		
		F.Intrinsic.Control.ElseIf(V.Local.dCurOperDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"SHIP_TO_OP",V.Local.dShipDate)
		F.Intrinsic.Control.ElseIf(V.Local.dShipDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"CUR_OPER_DATE",V.Local.dCurOperDate)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"CUR_OPER_DATE",V.Local.dCurOperDate,"SHIP_TO_OP",V.Local.dShipDate)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Data.DataTable.FillFromDictionary("dtAll","dIndirect","JS","IND_FLAG")
	
	'Add Late Column
	f.Intrinsic.String.build("IIF([SCHEDULED_DUE_DATE] > [DATE_DUE],1,IIF([CUR_OPER_DATE] < #{0}#,1,0))",v.Ambient.Date.FormatMM/DD/YYYY,v.Local.sHold)
	f.Data.DataTable.AddExpressionColumn("dtAll","Late","boolean",v.Local.sHold)
	f.Intrinsic.String.build("IIF([DATE_DUE] < #{0}#,1,0)",v.Ambient.Date.FormatMM/DD/YYYY,v.Local.sHold)
	f.Data.DataTable.AddExpressionColumn("dtAll","Phs_Late","boolean",v.Local.sHold)
	'Create column for check Ready that copy from MJMS to MJ and MS
	f.Data.DataTable.AddExpressionColumn("dtAll","JobSuffixCodeSource","string","[Job] + '-' + [Suffix] + '-' + [CODE_SOURCE]")
	
	f.Intrinsic.Control.CallSub("CheckFullyAllocated")
	f.Intrinsic.Control.CallSub("CheckReqs")
	
	F.Data.DataView.Create("dtAll","dvAll",22,"IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	
'working
	F.Intrinsic.Control.CallSub(loadgvall)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.loadDTDVAll.End

Program.Sub.CheckFullyAllocated.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	'Get all required to be issued
	f.Intrinsic.Control.If(v.DataTable.dtAlloc.Exists)
		f.Data.DataTable.Close("dtAlloc")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.CreateFromSQL("dtAlloc","con","SELECT A.JOB,A.SFX,A.JOB + A.SFX as JobSuffix,A.SEQ,A.SEQRES,a.PCSTOPROD ,B.LOCATION ,D.CODE_SOURCE ,A.Seqres + '-' + B.Location + '-' + A.JOB + A.SFX + Right('000000' + Cast(Seq as Varchar),6) as PartLocJobSuffixSeq ,Convert(0,SQL_Float) as Allocated FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX LEFT JOIN INVENTORY_MST2 D ON A.SEQRES = D.PART AND B.LOCATION = D.LOCATION WHERE A.SEQTYPE = 2 And CODE_SOURCE in ('P','M','F') and ComplDate is Null and PCSTOPROD <> 0",True)

	
	'Get Current allocated from item master and populate in parallel with all required dt
	f.Data.Dictionary.CreateFromSQL("AllocDict","con","select Part + '-' + Location + '-' + Heat as PartLocJobSuffixSeq, Quantity from item_master where heat <> '' and Alloc_Type = 'W'")
	f.Data.Dictionary.SetDefaultReturn("AllocDict",0)
	f.Data.DataTable.FillFromDictionary("dtAlloc","AllocDict","PartLocJobSuffixSeq","Allocated")
	f.Data.Dictionary.Close("AllocDict")
	
	'Get full allocated sequences
	f.Data.DataTable.AddExpressionColumn("dtAlloc","FullAllocated","boolean","IIF([PCSTOPROD] <= [Allocated],1,0)")
	f.Intrinsic.Control.If(v.DataTable.dtFullAllocated.Exists)
		f.Data.DataTable.Close("dtFullAllocated")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.Create("dtAlloc","dvAlloc",22,"FullAllocated = 1","")	
	f.Data.DataView.ToDataTableDistinct("dtAlloc","dvAlloc","dtFullAllocated","JobSuffix*!*FullAllocated",True)
	F.Data.DataTable.AddColumn("dtFullAllocated","Validated","boolean",True)
	
	'Get not allocated/not fully allocated sequences
	f.Data.DataView.SetFilter("dtAlloc","dvAlloc","FullAllocated = 0")	
	f.Intrinsic.Control.If(v.DataTable.dtNOTFullAllocated.Exists)
		f.Data.DataTable.Close("dtNOTFullAllocated")
	f.Intrinsic.Control.EndIf		
	f.Data.DataView.ToDataTableDistinct("dtAlloc","dvAlloc","dtNOTFullAllocated","JobSuffix*!*FullAllocated",True)	
	f.Data.Dictionary.CreateFromDatatable("NOTFullorPartiallyAllocDict","dtNOTFullAllocated","JobSuffix","FullAllocated")
	f.Data.Dictionary.SetDefaultReturn("NOTFullorPartiallyAllocDict",True)
	'Go back and flag the fullAllocated that contains some that are not fullallocated
	f.Data.DataTable.FillFromDictionary("dtFullAllocated","NOTFullorPartiallyAllocDict","JobSuffix","Validated")
	f.Data.Dictionary.Close("NOTFullorPartiallyAllocDict")
	'Turn that Final FullAllocated into dictionary and flag dtAll
	f.Intrinsic.Control.If(v.DataTable.dtFullAllocatedFinal.Exists)
		f.Data.DataTable.Close("dtFullAllocatedFINAL")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create("dtFullAllocated","dvFullAllocated",22,"Validated = 1","")	
	f.Data.DataView.ToDataTableDistinct("dtFullAllocated","dvFullAllocated","dtFullAllocatedFINAL","JobSuffix*!*Validated",True)
	f.Data.Dictionary.CreateFromDataTable("FullAllocatedDict","dtFullAllocatedFINAL","JobSuffix","Validated")
	f.Data.Dictionary.SetDefaultReturn("FullAllocatedDict",False)
	f.Data.DataTable.FillFromDictionary("dtAll","FullAllocatedDict","JobSuffix","Fullallocated")
	f.Data.Dictionary.Close("FullAllocatedDict")	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckFullyAllocated.End

Program.Sub.CheckReqs.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sJob2.Declare
	V.Local.sSuffix2.Declare
	V.Local.sSourceCode.Declare
	V.Local.sSQL.Declare
	V.Local.fMrpQty.Declare
	V.Local.fQty.Declare
	V.Local.fNewQty.Declare
	V.Local.iRows.Declare
	V.Local.iCnt2.Declare
	V.Local.iProgress.Declare
	v.Local.iInner.Declare
	v.Local.sFilter.Declare
	v.Local.iRowIndex.Declare
	v.Local.sHold.Declare
	v.Local.fHold.Declare
	v.Local.fPcsToProd.Declare

	Gui.FrmMaster.lblStatus.Caption("Checking for Material Availability....")

	'Get dataview of not Issued
	F.Data.DataView.Create("dtAll","dvMJMS",22,"Issued <> True AND IND_FLAG <> True and FullAllocated = 0","DATE_START,PRIORITY,JOB,SUFFIX")
	'Create Part Loc , Original Onhand Qty
	f.Intrinsic.Control.If(v.DataTable.PartLocMRP.Exists)
		f.Data.DataTable.Close("PartLocMRP")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("PartLocMrp","con","Select  i1.Part + '-' + i1.Location as PartLoc, i1.Qty_Onhand,i1.Qty_Onhand - Isnull(i3.Quantity,0) as Mrp_QtyOrig,i1.Qty_Onhand - Isnull(i3.Quantity,0) as Mrp_Qty from Inventory_mstr i1 left join (Select  i2.Part,i2.Location,Sum(Quantity) as Quantity from Item_Master i2 where i2.Alloc_Type = 'W' Group by i2.Part,i2.Location) i3 on i1.Part = i3.Part and i1.Location = i3.Location",True)
	f.Data.DataView.Create("PartLocMrp","dvPartLocMrp")	

	Gui.FrmMaster.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtAll!dvMJMS.RowCount,=,0)
		Gui.FrmMaster.pbStatus.Max(100)
	F.Intrinsic.Control.Else
		Gui.FrmMaster.pbStatus.Max(V.DataView.dtAll!dvMJMS.RowCount)
	F.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.DataTable.MRP.Exists)
		f.Data.DataTable.Close("MRP")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("MRP","con","SELECT A.Seqres + '-' + B.Location + '-' + A.JOB + A.SFX + Right('000000' + Cast(Seq as Varchar),6) as PartLocJobSuffixSeq,A.JOB,A.SFX,A.SEQ,SEQRES,B.LOCATION,SEQRES + '-' + B.LOCATION as PartLoc,IsNull(D.CODE_SOURCE,'') as CODE_SOURCE,PCSTOPROD,Convert(0,SQL_Float) as Allocated,CONVERT(CASE WHEN A.ComplDate IS NULL THEN '1900-01-01' ELSE A.ComplDate END,SQL_DATE) AS ComplDate FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX LEFT JOIN V_INVENTORY_MSTR C ON A.SEQRES = C.PART AND B.LOCATION = C.LOCATION LEFT JOIN INVENTORY_MST2 D ON A.SEQRES = D.PART AND B.LOCATION = D.LOCATION WHERE A.SEQTYPE = 2 ORDER BY A.JOB,A.SFX,A.SEQ;",True)
	
	'Allocated by job,suffix Seq Dict
	f.Data.Dictionary.CreateFromSQL("AllocBySeqDict","con","select Part + '-' + Location + '-' + Heat, Quantity from Item_Master where Alloc_Type = 'W'")
	f.Data.Dictionary.SetDefaultReturn("AllocBySeqDict",0)
	f.Data.DataTable.FillFromDictionary("MRP","AllocBySeqDict","PartLocJobSuffixSeq","Allocated")
	'PcsToProdAfterAlloc
	f.Data.DataTable.AddExpressionColumn("MRP","PcsToProdAfterAlloc","float","Isnull([PCSTOPROD],0) - [Allocated]")
	
	f.Data.DataView.Create("MRP","dvMRP")

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtAll!dvMJMS.RowCount--,1)
		Gui.FrmMaster.pbStatus.Value(V.Local.iCnt)
		V.Local.sJob.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).JOB!FieldValString)
		V.Local.sSuffix.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).SUFFIX!FieldValString)
		V.Local.sSourceCode.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).CODE_SOURCE!FieldValTrim)
		
		f.Intrinsic.Control.CallSub("Process_MRP","sJob",v.Local.sJob,"sSuffix",v.Local.sSuffix)
		F.Data.DataView.SetValue("dtAll","dvMJMS",V.Local.iCnt,"READY",v.Args.sReady)
	F.Intrinsic.Control.Next(V.Local.iCnt)	
	
	f.Data.Dictionary.Close("AllocBySeqDict")	
	gui.FrmMaster.lblStatus.Caption("")
	gui.FrmMaster.pbStatus.Visible(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckReqs.End

Program.Sub.Process_MRP.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sReady.Declare
	v.Local.sFilter.Declare
	v.Local.fPcsToProd.Declare
	v.Local.iRowIndex.Declare
	v.Local.fHold.Declare
	v.Local.iCnt.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.sRet.Declare	
	v.Local.fPcsToProdAfterAlloc.Declare
	
	v.Local.sReady.Set("Y")
	
	'1/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate = #01/01/1900# and PCSTOPROD <> 0",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)	
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataView.MRP!dvMRP.RowCount--,1)
			v.Local.fPcsToProdAfterAlloc.Set(v.DataView.MRP!dvMRP(v.Local.iCnt).PcsToProdAfterAlloc!FieldValString)
			
			f.Intrinsic.Control.If(v.Local.fPcsToProdAfterAlloc,>,0)

				f.Intrinsic.String.Replace(v.DataView.MRP!dvMRP(v.Local.iCnt).SEQRES!FieldValString,"'","''",v.Local.sPart)
				v.Local.sLoc.Set(v.DataView.MRP!dvMRP(v.Local.iCnt).Location!FieldValString)
				f.Intrinsic.String.Build("PartLoc = '{0}-{1}'",v.Local.sPart,v.Local.sLoc,v.Local.sFilter)
				f.Data.DataTable.Select("PartLocMRP",v.Local.sFilter,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"***NORETURN***")
					V.Local.iRowIndex.Set(V.Local.sRet)				
					f.Intrinsic.Math.Sub(v.DataTable.PartLocMRP(v.Local.iRowIndex).Mrp_Qty!FieldValString,v.Local.fPcsToProdAfterAlloc,v.Local.fHold)
					f.Data.DataTable.SetValue("PartLocMRP",v.Local.iRowIndex,"Mrp_Qty",v.Local.fHold)
					f.Intrinsic.Control.If(v.Local.fHold,<,0)
						v.Local.sReady.Set("")
					f.Intrinsic.Control.EndIf				
				f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.Next(v.Local.iCnt)
		F.Intrinsic.Control.If(V.Local.sReady,=,"")
			f.Intrinsic.Variable.AddRV("sReady",v.Local.sReady)
			f.Intrinsic.Control.ExitSub			
		F.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.EndIf	
		
	'2/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate = #01/01/1900# and PCSTOPROD = 0",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.sReady.Set("")
		f.Intrinsic.Variable.AddRV("sReady",v.Local.sReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf				
	
	'3/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate <> #01/01/1900#",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.sReady.Set("")
		f.Intrinsic.Variable.AddRV("sReady",v.Local.sReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf		
	
	'4/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE not in ('P','M','F')",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.sReady.Set("")
		f.Intrinsic.Variable.AddRV("sReady",v.Local.sReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Variable.AddRV("sReady",v.Local.sReady)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Process_MRP.End

Program.Sub.LoadGVAll.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare
	V.Local.iPID.Declare
	V.Local.sFiles.Declare
	V.Local.sDeleteFile.Declare

	Gui.FrmMaster.GsGCAll.AddGridViewFromDataView("gvAll","dtAll","dvAll")
	Gui.FrmMaster.GsGCAll.SuspendLayout()
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","MultiSelect",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","AllowSort",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","AllowFilter",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsViewShowAutoFilterRow",True)

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JS","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LATE","Visible",True)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JobSuffix","Visible",False)
	
	
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","Caption","PickList")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","Caption","Job")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","Caption","Late")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","Caption","Issued")

	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","ReadOnly",False)

	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","MinWidth","55")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","MinWidth","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","MinWidth","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","MinWidth","26")

	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","HeaderHAlignment","Center")

	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","Fixed","Left")
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PickList Printed","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Late","tagLategvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Late","tagLategvAll","backcolor","Pink")	
	
	'Set column color based on Issued/Not Issued
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Issued","tagIssuedgvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Issued","tagIssuedgvAll","backcolor","Purple")		
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Phs_Late","tagPhs_LategvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Phs_Late","tagPhs_LategvAll","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCAll.ResumeLayout()
	Gui.FrmMaster.GsGCAll.MainView("gvAll")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVAll.End

Program.Sub.LoadDTMJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.DataTable.dtMJ.Exists,=,True)
		F.Data.DataTable.Close("dtMJ")
	f.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtAll","dvMJ",22,"Issued <> True AND CODE_SOURCE = 'F' AND IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvMJ","dtMJ",True)

	F.Intrinsic.Control.CallSub(LoadgvMJ)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTMJ.End

Program.Sub.LoadGVMJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCMJ.AddGridViewFromDataTable("gvMJ","dtMJ")
	Gui.FrmMaster.GsGCMJ.SuspendLayout()
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","MultiSelect",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","AllowSort",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","AllowFilter",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsViewShowAutoFilterRow",True)	

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JS","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CODE_SOURCE","Visible",False)	
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PART","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JobSuffix","Visible",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","Caption","Job")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","Caption","Late")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","Caption","Issued")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","MinWidth","26")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Late","tagLategvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Late","tagLategvMJ","backcolor","Pink")	
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Phs_Late","tagPhs_LategvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Phs_Late","tagPhs_LategvMJ","backcolor","Yellow")		
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCMJ.ResumeLayout()
	Gui.FrmMaster.GsGCMJ.MainView("gvMJ")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVMJ.End

Program.Sub.LoadDTMS.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	

	F.Intrinsic.Control.If(V.DataTable.dtMS.Exists,=,true)
		F.Data.DataTable.Close("dtMS")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.Create("dtAll","dvMS",22,"Issued <> True AND CODE_SOURCE = 'M' AND IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvMS","dtMS",True)

	F.Intrinsic.Control.CallSub(LoadGVMS)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTMS.End

Program.Sub.LoadGVMS.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCMS.addGridviewfromDataTable("gvMS","dtMS")
	Gui.FrmMaster.GsGCMS.SuspendLayout()
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","MultiSelect",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","AllowSort",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","AllowFilter",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsViewShowAutoFilterRow",True)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JS","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PART","Visible",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","Caption","Job")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","Caption","Late")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","Caption","Issued")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","MinWidth","26")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Late","tagLategvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Late","tagLategvMS","backcolor","Pink")
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Phs_Late","tagPhs_LategvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Phs_Late","tagPhs_LategvMS","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCMS.ResumeLayout()
	Gui.FrmMaster.GsGCMS.MainView("gvMS")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVMS.End

Program.Sub.LoadDTIndWos.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.DataTable.dtInd.Exists,=,true)
		F.Data.DataTable.Close("dtInd")
	F.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtAll","dvInd",22,"IND_FLAG = True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvInd","dtInd",True)

	F.Intrinsic.Control.CallSub(loadgvindwos)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTIndWos.End

Program.Sub.LoadGVIndWOs.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCIndWOs.AddGridViewFromDataTable("gvInd","dtInd")
	Gui.FrmMaster.GsGCIndWOs.SuspendLayout()
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","MultiSelect",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","AllowSort",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","AllowFilter",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsViewShowAutoFilterRow",True)		

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JS","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PART","Visible",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","Caption","Job")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","Caption","Late")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","Caption","Issued")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","MinWidth","26")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_late","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCIndWOs.AddStyleFormatCondition("gvInd","Late","tagLategvInd","equal","True")
	gui.FrmMaster.GsGCIndWOs.SetStyleFormatConditionProperty("gvInd","Late","tagLategvInd","backcolor","Pink")
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCIndWOs.AddStyleFormatCondition("gvInd","Phs_Late","tagPhs_LategvInd","equal","True")
	gui.FrmMaster.GsGCIndWOs.SetStyleFormatConditionProperty("gvInd","Phs_Late","tagPhs_LategvInd","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCIndWOs.ResumeLayout()
	Gui.FrmMaster.GsGCIndWOs.MainView("gvInd")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVIndWOs.End

Program.Sub.Color_Ready_And_FullAllocated.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare

	'Set column color based on Ready/Not Ready
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Ready","tagReadygvMJ","equal","Y")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Ready","tagReadygvMJ","backcolor","LightGreen")	
	
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Ready","tagReadygvMS","equal","Y")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Ready","tagReadygvMS","backcolor","LightGreen")	
	
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Ready","tagReadygvAll","equal","Y")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Ready","tagReadygvAll","backcolor","LightGreen")	
	
	'FullAllocated
	'Set column color based on FullAllocated/Not FullAllocated
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","FullAllocated","tagFullAllocatedgvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","FullAllocated","tagFullAllocatedgvMJ","backcolor","LightBlue")	
	
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","FullAllocated","tagFullAllocatedgvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","FullAllocated","tagFullAllocatedgvMS","backcolor","LightBlue")	
	
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","FullAllocated","tagFullAllocatedgvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","FullAllocated","tagFullAllocatedgvAll","backcolor","LightBlue")	
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Color_Ready_And_FullAllocated.End

Program.Sub.GsGCAll_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare
	
	f.Intrinsic.Control.If(v.Screen.FrmMaster!optAlloc.Value,=,"True")
		F.Intrinsic.Task.LaunchGSSsync("INV060","-c","")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	v.Local.bIssue.Declare
	v.Local.bIssue.Set(v.DataTable.dtAll(v.Args.RowIndex).Issued!FieldValString)
	f.Intrinsic.Control.If(v.Local.bIssue)
		'Processing the "old" dtAll
		F.Intrinsic.Control.SelectCase(v.Args.Column)
			F.Intrinsic.Control.Case("JOB")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("SUFFIX")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			f.Intrinsic.Control.Case("DISPLAY_PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("PRINTED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,True)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
				F.Intrinsic.Control.If(V.Global.bExists)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
						F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
						F.Intrinsic.Control.If(V.Local.sWC,<>,"")
							F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
							F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
							F.Intrinsic.Control.If(V.Local.sWG,<>,"")
								F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
								F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
								F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
								F.Global.General.ResetPassedDataElements
								Gui.FrmMaster.cmdRefresh.BackColor(255)
								Gui.FrmMaster.lblStatus.ForeColor(255)
								Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
								Gui.FrmMaster.lblStatus.Visible(True)
							F.Intrinsic.Control.Else
								F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("FLAG_HOLD")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue)
						V.Local.sHold.Set("N")
						V.Local.iHold.Set(0)
						V.Local.bHold.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,False)
					F.Intrinsic.Control.Else
						V.Local.sHold.Set("Y")
						V.Local.iHold.Set(1)
						V.Local.bHold.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,True)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.Case("RELEASED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.EndSelect
	
	
	'Processing the "old" MJMS
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.SelectCase(v.Args.Column)
			f.Intrinsic.Control.Case("JOB")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("SUFFIX")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			f.Intrinsic.Control.Case("DISPLAY_PART")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("PRINTED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,True)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
				F.Intrinsic.Control.If(V.Global.bExists)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
						F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
						F.Intrinsic.Control.If(V.Local.sWC,<>,"")
							F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
							F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
							F.Intrinsic.Control.If(V.Local.sWG,<>,"")
								F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
								F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
								F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
								F.Global.General.ResetPassedDataElements
								Gui.FrmMaster.cmdRefresh.BackColor(255)
								Gui.FrmMaster.lblStatus.ForeColor(255)
								Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
								Gui.FrmMaster.lblStatus.Visible(True)
							F.Intrinsic.Control.Else
								F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("FLAG_HOLD")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue)
						V.Local.sHold.Set("N")
						V.Local.iHold.Set(0)
						V.Local.bHold.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,False)
					F.Intrinsic.Control.Else
						V.Local.sHold.Set("Y")
						V.Local.iHold.Set(1)
						V.Local.bHold.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,True)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.Case("RELEASED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_RowCellClick.End

Program.Sub.GsGCAll_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	
	v.Local.bIssue.Declare
	v.Local.bIssue.Set(v.DataTable.dtAll(v.Args.RowIndex).Issued!FieldValString)
	
	'Process the "old" dtAll
	f.Intrinsic.Control.If(v.Local.bIssue)	
		F.Intrinsic.Control.SelectCase(V.Args.column)
			F.Intrinsic.Control.Case("WO_NOTE")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
				'Modified by Deni Y 11/25/20, turned off commands below since it's flagged as error by GABErrorScanner
'				F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvAll","WO_Note","WO_NOTE")
		
			F.Intrinsic.Control.Case("WO_NOTE2")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
				F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
		F.Intrinsic.Control.EndSelect		
	
	'Process the "old" dtMJMS
	f.Intrinsic.Control.Else
		F.Intrinsic.Control.SelectCase(V.Args.column)
			F.Intrinsic.Control.Case("WO_NOTE")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
	
			F.Intrinsic.Control.Case("WO_NOTE2")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
				F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
	
		F.Intrinsic.Control.EndSelect

	
	f.Intrinsic.Control.EndIf


	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_CellValueChanged.End

Program.Sub.GsGCMJ_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvMJ","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvMJ","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMJ_RowCellClick.End

Program.Sub.GsGCMJ_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			'Modified by Deni Y 11/25/20, turned off command below since it's flagged as error by GABErrorScanner
'			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvMJ","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvMJ","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMJ_CellValueChanged.End

Program.Sub.GsGCMS_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","PART",V.Args.RowIndex,V.Local.sPart)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","LOCATION",V.Args.RowIndex,V.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","PART",V.Args.RowIndex,V.Local.sPart)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","LOCATION",V.Args.RowIndex,V.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvMS","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvMS","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMS_RowCellClick.End

Program.Sub.GsGCMS_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvMS","WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvMS","WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMS_CellValueChanged.End

Program.Sub.GsGCIndWOs_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.bRel.Declare

	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvInd","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvInd","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCIndWOs_RowCellClick.End

Program.Sub.GsGCIndWOs_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
'			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvInd","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
'			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvInd","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCIndWOs_CellValueChanged.End

Program.Sub.cmdExport_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

	F.Intrinsic.Control.SelectCase(V.Screen.FrmMaster!tabMaster.Tab)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_All_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_All_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case(1)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_MJ_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMJ.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_MJ_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMJ.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case(2)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_MS_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMS.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_MS_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMS.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.Case(3)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_IndWOs_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCIndWOs.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_IndWOs_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCIndWOs.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.cmdNew_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt)

	F.Intrinsic.Control.CallSub(lockscreen)
	F.Global.General.CallWrapperSync(2009,"*!*!!*!N")

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt2)

	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdNew_Click.End

Program.Sub.PrintPicklist.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'PreProc for Printing Material Picklist from Dashboard

	V.Local.iBIRunID.Declare
	V.Local.iBILogID.Declare
	V.local.iRet.Declare
	V.Local.iRptID.Declare
	V.Local.sParams.Declare
	V.Local.sValues.Declare

	F.Global.BI.GetIDFromName("GAB_4291_Mat_Picklist.rpt",V.Local.iRptID)

	F.Global.BI.GetRunID(V.Local.iBIRunID)
	F.Global.BI.StartLogging(V.Local.iBIRunID,V.Local.iRptID,0,"",V.Local.iBILogID)

	F.Intrinsic.String.Split("JOB*!*SUFFIX","*!*",V.Local.sParams)
	F.Intrinsic.String.Build("{0}*!*{1}",V.Args.Job,V.Args.Suffix,V.Local.sValues)
	F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)

	F.Intrinsic.Control.If(V.Local.iRptID,<,0)
		F.Intrinsic.UI.Msgbox("GAB_4291_Mat_Picklist.rpt is not set in your system","Report not found")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Global.BI.RunReportPreProcessor(V.Local.iBIRunID,V.Local.iBILogID,V.Local.sParams,V.Local.sValues,"",-1,True,"",-1,"",-1,"","",V.Local.iRet)
	F.Intrinsic.Control.EndIf

	F.Global.BI.StopLogging(V.Local.iBILogID)

'	F.Global.BI.PrintReport(V.Local.iRepID,0,V.Local.sName,V.Local.sValue,False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.PrintPicklist.End

Program.Sub.SavePrint.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,1000,False,"Barcode",True,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,1000,False,"Barcode",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,2000,False,"Picklist",True,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,2000,False,"Picklist",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SavePrint.End

Program.Sub.picGSSLogo_DblClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Show
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.frmWeb_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Visible(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.frmWeb_UnLoad.End

Program.Sub.cmdGSS_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdGSS_Click.End

Program.Sub.cmdServ_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-service.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdServ_Click.End

Program.Sub.cmdUpd_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-updates.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdUpd_Click.End

Program.Sub.CheckRefreshLock.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sLabel.Declare
	V.Local.bRet.Declare
	V.Local.sRet.Declare
	V.Local.dRet.Declare
	V.Local.sMsg.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,4000,0,"",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,4000,3,"",V.Local.dRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,4000,5,"",V.Local.sRet)
		F.Intrinsic.String.Split(V.Local.sRet,"-",V.Local.sRet)
		F.Intrinsic.String.Build("Dashboard is currently being refreshed by {0} with a cutoff date of {1}.",V.Local.sRet(1),V.Local.dRet,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Refresh Locked")
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Refresh Lock-{0}",V.Caller.User,V.Local.sLabel)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,4000,False,V.Local.sLabel,True,0,-999.0,V.Screen.FrmMaster!dtpCutDt.Value,)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckRefreshLock.End

Program.Sub.txtCutDays_Change.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iDays.Declare
	V.Local.dCutDt.Declare

	F.Intrinsic.Control.If(V.Screen.FrmMaster!txtCutDays.Text,=,"")
		V.Local.iDays.Set(0)
	F.Intrinsic.Control.Else
		V.Local.iDays.Set(V.Screen.FrmMaster!txtCutDays.Text)
	F.Intrinsic.Control.EndIf
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5669,3000,False,"Cutoff Days",False,V.Local.iDays,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Date.DateAdd("D",V.Screen.FrmMaster!txtCutDays.Text,V.Ambient.Date,V.Local.dCutDt)
	Gui.FrmMaster.dtpCutDt.Value(V.Local.dCutDt)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.txtCutDays_Change.End

Program.Sub.dtpCutDt_Change.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iDays.Declare

	F.Intrinsic.Date.DateDiff("D",V.Ambient.Date,V.Screen.FrmMaster!dtpCutDt.Value,V.Local.iDays)
	Gui.FrmMaster.txtCutDays.Text(V.Local.iDays)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.dtpCutDt_Change.End

Program.Sub.cmdResetGsGC_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
	F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 5669 And Seq = 1000;")
	F.ODBC.Connection!common.Close
	
	Gui.frmWeb..Visible(False)
	F.Intrinsic.Control.CallSub("Load")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdResetGsGC_Click.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'gvAll
	Gui.FrmMaster.GsGCAll.Serialize("gvAll",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5669,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	'gvMJ
	Gui.FrmMaster.GsGCMJ.Serialize("gvMJ",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVMJ",5669,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	'gvMS
	Gui.FrmMaster.GsGCMS.Serialize("gvMS",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVMS",5669,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	'gvInd
	Gui.FrmMaster.GsGCIndWOs.Serialize("gvInd",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVIND",5669,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'Delete old registry records
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5669,0,5,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 5669 And Seq < 1000;")
		F.ODBC.Connection!common.Close
	F.Intrinsic.Control.EndIf

	'gvAll
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5669,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmMaster.GsGCAll.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	'gvMJ
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVMJ",5669,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmMaster.GsGCMJ.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	'gvMS
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVMS",5669,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmMaster.GsGCMS.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	'gvInd
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVIND",5669,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmMaster.GsGCIndWOs.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Comments.Start
${$0$}$GAB_5669_MasterSched_GM$}$JoeyT & AGV$}$08/22/2016 1:27:19 PM$}$False
${$5$}$2.0.0.0$}$2
${$6$}$rnair$}$20210629171743686$}$JUGEdtlNdgRUPvge2DQ26bz/1piQWHOnrNYiieiiSpvKtHq5bvxUfpu4KpVMmeo5+haVLPVWQBc=
Program.Sub.Comments.End
